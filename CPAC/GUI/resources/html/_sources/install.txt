Installing CPAC
----------------

Requirements
^^^^^^^^^^^^

System Requirements
""""""""""""""""""
CPAC is **designed to run in a \*nix-like environment** and thus does not support Windows.  The CPAC team actively tests CPAC in Ubuntu Linux, although older versions of that distribution and other \*nixes (such as Mac OS X) should work as well.   As a general rule, CPAC can operate on any machine capable of reliably running `AFNI <http://afni.nimh.nih.gov/afni>`_ and `FSL <http://fsl.fmrib.ox.ac.uk/fsl/fslwiki/>`_. 

Hardware Requirements
""""""""""""""""""""
* A multiprocessor/multicore system (highly recommended)
* 8 GB of RAM (for computationally-intensive processes such as anatomical registration using ANTS)

A Note About the \*nix Command Line
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
**This user guide assumes a basic level of experience using the command line.** If you are new to the command line (also known as the terminal), the resources below will help you get started:

* `Getting to Know the Command Line <http://www.davidbaumgold.com/tutorials/command-line/>`_
* Terminals for Absolute Beginners (`Part 1 <http://glennstovall.com/blog/2012/02/15/terminals-for-absolute-beginners/>`_) (`Part 2 <http://glennstovall.com/blog/2012/03/07/terminals-for-absolute-beginners-part-2/>`_)
* `Learning the Shell <http://linuxcommand.org/lc3_learning_the_shell.php>`_
* `Unix Tutorial for Beginners <http://www.ee.surrey.ac.uk/Teaching/Unix/index.html>`_
* `Unix for the Beginning Mage <http://unixmages.com/>`_

Installation Overview
^^^^^^^^^^^^^^^^^^^^^
If you are using Ubuntu (version 12.04 or newer) you can download  and run `cpac_install.sh <https://github.com/FCP-INDI/C-PAC/blob/master/scripts/cpac_install.sh?raw=true>`_ with the following terminal commands:

.. code-block:: bash

    wget https://github.com/FCP-INDI/C-PAC/blob/master/scripts/cpac_install.sh?raw=true
    mv cpac_install.sh?raw=true cpac_install.sh
    sudo -i
    ./cpac_install.sh
   
This will install all of the prerequisites and resources listed below. If you have previously installed versions of these, they will not be reinstalled, and the script will not check the release version to match the requirements of CPAC. 
 
**Note**: This script is intended for Ubuntu Linux 12.04,  but it may work for older releases of Ubuntu.

**For other operating systems**, this page will guide you through the following CPAC installation steps:

* Installing the required system-level dependencies
* Installing the required Python dependencies 
* Installing AFNI and FSL
* Installing C3D and ANTS (optional, but recommended)
* Installing the required CPAC image resources
* Installing CPAC itself

It will also provide information on how to:

* Test your installation.
* Upgrade CPAC to a new version.
* Run CPAC without installing.

Installing System-Level Dependencies
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

A complete installation of CPAC requires that the following dependencies be installed on your OS (and possibly other packages depending on your configuration):

* cmake
* make
* build
* git
* unzip
* libxp
* netpbm
* gcc (with Fortran and C++ compilers and libgfortran)
* The Python developer libraries
* lapack and its developer libraries
* libcanberra (under Linux)
* The Mesa OpenGL utility library
* gsl
* zlib and its developer libraries
* `Graphviz <http://www.graphviz.org/>`_ (optional; required for workflow graphs)

The command to install all of these on Ubuntu is:

.. code-block:: bash
    
    sudo apt-get install -y cmake git make unzip libcanberra-gtk-module libxp6 netpbm libglu1-mesa gsl-bin zlib1g-dev graphviz graphviz-dev pkg-config build-essential

OS-Specific Instructions 
""""""""""""""""""""""""

**Mac OS X:** 

* Installing system-level and Python dependencies will be made much easier if you download the `Xcode Command Line Tools from Apple <https://developer.apple.com/downloads/index.action>`_ (requires a free Apple account), which includes (among other things) Git and gcc.
* You may want to consider using a package manager such as `Homebrew <http://brew.sh/>`_, `Macports <https://www.macports.org/>`_, or `Fink <http://www.finkproject.org/>`_.

Installing Python Dependencies
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Please ensure that you are using Python 2.7 and above, but not Python 3 (since it is not backwards-compatible). Though many computers come with Python pre-installed, CPAC relies on a number of special-purpose packages, which are listed below. Packages with an asterisk can be installed through `easy_install <https://pythonhosted.org/setuptools/easy_install.html>`_ or pip.  Installing `Anaconda <https://store.continuum.io/cshop/anaconda/>`_ (**64-bit version only**), `Miniconda <http://conda.pydata.org/miniconda.html>`_ or  `Enthought Canopy <https://www.enthought.com/products/canopy/>`_ and using a package manager can simplify installation greatly.  Instructions for Miniconda are given below.

* `SciPy and NumPy <http://www.scipy.org/install.html>`_ 
* Nipype (version 0.10 for versions of CPAC after 0.3.7, `version 0.9.2 <https://github.com/FCP-INDI/nipype/releases/tag/v0.9.2_cpac_tested>`_ for CPAC versions 0.3.4b, 0.3.5, and 0.3.6)
* Nibabel
* `NetworkX <http://networkx.lanl.gov/>`_ * 
* `Traits <https://github.com/enthought/traits>`_ * 
* `Matplotlib <http://matplotlib.sourceforge.net/>`_ *
* `wxPython <http://www.wxpython.org/>`_
* `PyYAML <http://pyyaml.org/wiki/PyYAML>`_ * 
* `Jinja2 <http://jinja.pocoo.org/docs/intro/#installation>`_ *
* `PyLockfile <https://code.google.com/p/pylockfile/>`_ *
* `Cython <http://www.cython.org/>`_ (version 12.1 or greater)  *
* `iPython <http://ipython.org/>`_ (optional)
* `PyGraphviz <http://www.graphviz.org/>`_ (optional; required for workflow graphs)
* `Patsy <https://patsy.readthedocs.org/en/latest/>`_

Miniconda
""""""""

The following commands will install all the Python dependencies within a Miniconda environment:

.. code-block:: bash

   wget http://repo.continuum.io/miniconda/Miniconda-3.8.3-Linux-x86_64.sh
   chmod +x Miniconda-3.8.3-Linux-x86_64.sh
   ./Miniconda-3.8.3-Linux-x86_64.sh -b
   export PATH=~/miniconda/bin:${PATH}
   echo 'export PATH=~/miniconda/bin:${PATH}' >> ~/.bashrc
   conda create -y -n cpac python
   source activate cpac
   conda install -y cython numpy scipy matplotlib networkx traits pyyaml jinja2 nose ipython pip wxpython
   pip install lockfile pygraphviz nibabel nipype patsy
   source deactivate
 
OS-Specific Instructions 
""""""""""""""""""""""""

**Mac OS X:** 

* It is highly recommended that you use either Canopy or Anaconda/Miniconda to install Python packages such as wxPython, SciPy and NumPy.  Manually installing these packages on OS X can be difficult and error-prone.  If you use Anaconda/Conda, the commands above should install all packages seamlessly (assuming you download the Mac OS X Miniconda install script instead of the Linux script).  

Installing AFNI and FSL
^^^^^^^^^^^^^^^^^^^^^^^
CPAC harnesses the power of two leading neuroimaging software packages (`AFNI <http://afni.nimh.nih.gov/>`_ and `FSL <http://fsl.fmrib.ox.ac.uk/fsl/fslwiki/>`_) to perform key analyses. These packages must be installed before running CPAC. 

For instructions on how to install AFNI, `click here <http://afni.nimh.nih.gov/pub/dist/HOWTO/howto/ht00_inst/html/>`_. 

For instructions on how to install FSL, `click here <http://fsl.fmrib.ox.ac.uk/fsl/fslwiki/FslInstallation>`_. Users should ensure they download and install FSL -5.0. 


Check AFNI and FSL Paths
""""""""""""""""""""""""
Application paths for AFNI and FSL should have been added to your user profile when they were installed, but it is useful to double-check this before continuing (as the absence of these paths is a common cause of CPAC errors). If the application paths have been set properly, you should be able to open AFNI and FSL by running the commands ``afni`` and ``fsl`` in a new terminal window.

If either of these commands fail, you will have to add the AFNI and FSL application paths manually. To do this, run the command ``nano ~/.bashrc``. This will open your :file:`.bashrc` file in the `nano text editor <http://mintaka.sdsu.edu/reu/nano.html>`_.  If you are using the C shell instead of bash, replace ``.bashrc`` with ``.cshrc``. Scroll to the bottom of the file (navigate using the arrow keys on your keyboard) and paste the following text

.. code-block:: bash

    # Path to FSL
    FSLDIR=/path/to/fsl
    . ${FSLDIR}/etc/fslconf/fsl.sh
    PATH=${FSLDIR}/bin:${PATH}
    export FSLDIR PATH

    # Path to AFNI
    export PATH=$PATH:/path/to/afni
    export DYLD_FALLBACK_LIBRARY_PATH=/path/to/afni

Where :file:`/path/to/fsl` and :file:`/path/to/afni` are the locations where FSL and AFNI are installed (by default, these are :file:`/usr/local/fsl` for FSL and :file:`~/abin` for AFNI). When you have added the paths, save your changes (control + O) and exit nano (control + X).

To confirm that the changes have worked, open a new terminal window and try again to open AFNI and FSL.

OS-Specific Instructions 
""""""""""""""""""""""""

**Ubuntu/Neurodebian:**

* Installing the key for the Neurodebian repository (must have superuser privileges or use sudo)::

    wget -O- http://neuro.debian.net/lists/$(lsb_release -cs).us-nh.full | tee /etc/apt/sources.list.d/neurodebian.sources.list
    apt-key adv --recv-keys --keyserver pgp.mit.edu 2649A5A9
    apt-get update

* FSL : ``apt-get install -y fsl-5.0-complete``
* AFNI : ``apt-get install -y afni``

**Mac OS X:**

* FSL - Follow the instructions on the `FSL Download Page <http://fsl.fmrib.ox.ac.uk/fsldownloads/fsldownloadmain.html>`_.
* AFNI - Follow the instructions to do a `Basic Install <http://afni.nimh.nih.gov/pub/dist/HOWTO/howto/ht00_inst/html/mac_10.78.html>`_.
* Checking the AFNI and FSL paths - You must also add these paths to your :file:`.bash_profile` file. Simply follow the same instructions above but replace ``nano ~/.bashrc`` with ``nano ~/.bash_profile``.

Installing C3D and ANTS (optional, but recommended) 
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ANTS is an optional, but recommended package for performing image registration / normalization.  ANTS depends upon C3D, which can be installed by following the steps below.  If you do not want to install ANTS, you may skip this step.  You can always install ANTS later.

Installing C3D
"""""""""""""

#. Download C3D from `here <http://sourceforge.net/projects/c3d/>`_ or `here <http://www.nitrc.org/frs/downloadlink.php/1327>`_ (for Mac users). 
#. Unzip the downloaded archive, and place the extracted folder in the location of your choosing. 

#. Add the following text to your :file:`.bashrc` file: 

.. code-block:: bash

    export PATH=/path_to/C3D/bin:$PATH

Where :file:`/path_to/C3D` is the location of the extracted folder.

#. Open a new terminal window. Test your installation by running :file:`c3d_affine_tool`. If this fails, see the Troubleshooting section below.

**Troubleshooting:**

* If you are given a permissions error, run :file:`chmod -R /path_to/X`, where X is the folder of the package giving you the error.

* If you have added the paths to your :file:`.bashrc` (and :file:`.bash_profile` if necessary) but you are still unable to run the commands above, try adding or removing a trailing / from the paths (e.g. :file:`../bin` vs. :file:`../bin/`). We are working to compile a list of which platforms require the slash and which do not.


Installing ANTS
""""""""""""""

To install ANTS, follow the instructions below. Note: All paths used in the instructions are examples.  Custom paths may be used  according to your needs.


Download ANTS from Github and switch the repository branch to the version tested with C-PAC by running these commands from terminal:

.. code-block:: bash
    cd /tmp
    git clone https://github.com/stnava/ANTs.git 

This will create a folder named "ANTS" in the directory where you ran the command from.

Next, create a new directory in a location of your choosing and navigate to it:

.. code-block:: bash

    mkdir /opt/ants
    cd /opt/ants

Next, run these commands from this directory to build your ANTS install:

.. code-block:: bash

    cmake -c -g /tmp/ANTS
    make -j <number>

Where <number> is how many cores you wish to dedicate to building your install - the more you use, the sooner it will complete. For example, if you want to use four cores, you would run 'make -j 4'.

Once this is complete, you will need to modify your environment. Add the following text to your :file:`.bashrc` file: 

.. code-block:: bash

    export ANTSPATH=/opt/ants/bin
    export PATH=/opt/ants/bin:$PATH

You can test the installation by opening a new terminal window and running this command:

.. code-block:: bash

    antsApplyTransforms

If this returns a help page with a list of parameters, your ANTS installation was a success.

OS-Specific Instructions 
""""""""""""""""""""""""

**Mac OS X:**

* Similar to the AFNI and FSL path setup, you must also add the C3D and ANTS paths to your :file:`.bash_profile` file. 

Installing CPAC Image Resources
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
During preprocessing and analysis, CPAC utilizes many of the standard brain atlases and tissue maps provided by FSL. Additionally, CPAC requires the following non-standard files in order to run properly:

* Binarized tissue prior probability maps (used during :doc:`tissue segmentation </anat>`)
* Symmetric versions of the MNI152 brain template and masks (used when calculating :doc:`VMHC </vmhc>`)

These files are included in the CPAC Image Resources package, available `here <http://fcon_1000.projects.nitrc.org/indi/cpac_resources.tgz>`_. You may install these files using the following commands or use the included script (install_resources.sh):

.. code-block:: bash

    cd /tmp
    wget http://fcon_1000.projects.nitrc.org/indi/cpac_resources.tgz
    tar xfz cpac_resources.tgz
    cd cpac_image_resources
    cp -n MNI_3mm/* $FSLDIR/data/standard
    cp -n symmetric/* $FSLDIR/data/standard
    cp -nr tissuepriors/2mm $FSLDIR/data/standard/tissuepriors
    cp -nr tissuepriors/3mm $FSLDIR/data/standard/tissuepriors
    cp -n HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz $FSLDIR/data/atlases/HarvardOxford
 
These commands perform the following steps:

* The image resources are downloaded.

* Files located in the :file:`/symmetric` folder of the CPAC Image Resources directory are copied to the :file:`/data/standard` directory of your FSL installation.

* The :file:`/2mm` and :file:`/3mm` folders located in CPAC Image Resources directory are copied to :file:`/data/standard/tissuepriors` directory of your FSL installation.

Installing CPAC
^^^^^^^^^^^^^^^
Congratulations, you are now ready to install CPAC itself!

CPAC is available for download from the `CPAC Homepage <http://fcp-indi.github.com/>`_. Click the button labeled "Download as tar.gz". Unpack the downloaded archive and navigate to the new directory. To install CPAC, run the command ``sudo python setup.py install``. CPAC will be installed alongside your other python packages. If this fails, check to make sure that you have all the dependencies installed.  You may also install CPAC using the commands below:

 .. code-block:: bash
   
   cd /tmp
   git clone https://github.com/FCP-INDI/C-PAC.git
   cd C-PAC
   python setup.py install

Testing Your CPAC Installation
""""""""""""""""""""""""""""""
In a new terminal window, open iPython (or Python) and enter the command ``import CPAC``. If installation was successful, this will execute without an error and present you with a blank new line. If you encounter an error (e.g. ``no module named CPAC``), try re-running the CPAC install command above. If this does not work, see the :doc:`Troubleshooting and Help Page </help>`.  Note that if you do not open a new terminal window and are still within the CPAC installation directory ('C-PAC'), you may encounter errors that can be alleviated by leaving the 'C-PAC' directory.

Once you are able to successfully ``import CPAC`` it is safe to delete any setup files downloaded during the install process (e.g. Nipype and CPAC downloads, FSL install scripts, etc.), as they are no longer needed.

**Note:** The test process described here only acts to confirm that the CPAC python package has been correctly installed. To fully test CPAC on your system, please see the :doc:`Benchmark Page </benchmark>`.

Updating CPAC 
^^^^^^^^^^^^^^
CPAC is being actively developed, and new versions (containing bug fixes and new features) are often released. To update to the latest version, simply download it from the `CPAC Homepage <http://fcp-indi.github.com/>`_ and repeat the instructions in the "Installing CPAC" section above. A list of previous versions and the changes they contain is available on the :doc:`Release Notes Page </rnotes>`.

**Note: If you are using Anaconda/Miniconda you may also use the following command (replacing 'cpac' with your environment name) to remove an old environment before creating a new environment to replace it.**

 .. code-block:: bash

    conda remove --all -n cpac

Running CPAC Without Installing
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Users wishing to run CPAC without installing it can do so by copying the downloaded CPAC directory to the location of their choice. CPAC can then be run by opening iPython (or Python) from within this directory. This is useful in cases where a user does not have sufficient privledges to install Python packages, but is running on a machine that already contains all CPAC dependencies.

Some network centrality features will not be available without compiling the C-based elements. In order to do this without installing the rest of CPAC, simply use the following command

.. code-block:: bash

    python setup.py build_ext --inplace

**Note:** Unfortunately, it is not possible at this time to use the CPAC GUI without installing CPAC.
